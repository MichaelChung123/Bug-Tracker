Restarting sequence for serial values for 'users' table, with 'user_id' serial values.
ALTER SEQUENCE users_user_id_seq RESTART WITH 1;

Creating tables
CREATE TABLE users (
user_id serial PRIMARY KEY,
firstname VARCHAR(30),
lastname VARCHAR(30),
role VARCHAR(30),
);

Adding values into tables
INSERT INTO users(firstname, lastname, role)
VALUES
('Michael', 'Chung', 'Developer'),
('Ernie', 'Alcott', 'Developer'),
('Loris', 'Brunton', 'Developer'),
('Janet', 'Goldsmith', 'Developer'),
('Davida', 'Harig', 'Developer'),
('Leisa', 'Depp', 'Manager'),
('Riva', 'Jamar', 'Manager'),
('Tamesha', 'Yochum', 'Manager'),
('Bradford', 'Ehrhardt', 'Manager'),
('Alfred', 'Washer', 'Manager'),
('Winter', 'Derouin', 'Submitter'),
('Lyn', 'Chiaramonte', 'Submitter'),
('Ethelene', 'Menzies', 'Submitter'),
('Minna', 'Manzanares', 'Submitter'),
('Isreal', 'Nelson', 'Submitter'),
('Edgar', 'Dickens', 'Submitter')


Creating junction table
CREATE TABLE user_project
(
    user_id int NOT NULL,
    project_id int NOT NULL,
    CONSTRAINT PK_user_project PRIMARY KEY
    (
        user_id,
        project_id
    ),
    FOREIGN KEY (user_id) REFERENCES users (user_id),
    FOREIGN KEY (project_id) REFERENCES projects (project_id)
)


Select values from the joining tables by accessing the junction table
SELECT firstname, title
FROM user_project
JOIN users ON users.user_id = user_project.user_id
JOIN projects ON projects.project_id = user_project.project_id;


INSERT INTO user_project (user_id, project_id)
SELECT  users.user_id AS user_id,
        projects.project_id AS project_id
FROM users CROSS JOIN projects 
WHERE user_id=4 AND projects.project_id=4;


- store pdf into db as bytea
- unescape the value on retrieval






select column_name, data_type from information_schema.columns
where table_name = 'tickets';

CREATE TABLE COMMENTS (
    comment_id serial PRIMARY KEY,
    creator VARCHAR(50),
    createddate DATE,
    createdtime TIMESTAMP,
    ticket_id INTEGER REFERENCES tickets (ticket_id)
);

INSERT INTO comments (creator, createddate, createdtime, ticket_id, text)
VALUES 
('Michael Chung', CURRENT_DATE, CURRENT_TIMESTAMP, 7, 'This text is meant to be inside of comment #1'),
('Michael Chung', CURRENT_DATE, CURRENT_TIMESTAMP, 7, 'This text is meant to be inside of comment #2'),
('Michael Chung', CURRENT_DATE, CURRENT_TIMESTAMP, 7, 'This text is meant to be inside of comment #3'),
('Michael Chung', CURRENT_DATE, CURRENT_TIMESTAMP, 7, 'This text is meant to be inside of comment #4'),
('Michael Chung', CURRENT_DATE, CURRENT_TIMESTAMP, 7, 'This text is meant to be inside of comment #5'),
('Michael Chung', CURRENT_DATE, CURRENT_TIMESTAMP, 7, 'This text is meant to be inside of comment #6'),
('Michael Chung', CURRENT_DATE, CURRENT_TIMESTAMP, 7, 'This text is meant to be inside of comment #7');


UPDATE comments
SET text = 'My glass shall not persuade me I am old So long as youth and thou are of one date But when in thee times furrows I behold Then look I death my days should expiate For all that beauty that doth cover thee Is but the seemly raiment of my heart Which in thy breast doth live as thine in me How can I then be elder than thou art therefore love be of thyself so wary As I not for myself but for thee will';



(SELECT COUNT(*) AS count_ptu FROM projects)
UNION ALL
(SELECT COUNT(*) AS count_tickets FROM tickets)
UNION ALL
(SELECT COUNT(*) AS count_users FROM users);


